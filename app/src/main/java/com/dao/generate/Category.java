package com.dao.generate;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit. 

import com.dao.base.BaseSortFilterModel;

import java.io.Serializable;

/**
 * Entity mapped to table "CATEGORY".
 */
public class Category extends BaseSortFilterModel<Category> implements Serializable {

    private Long id;
    private int categoryId;
    /**
     * Not-null value.
     */
    private String name;
    private int parentId;

    public Category() {
    }

    public Category(Long id) {
        this.id = id;
    }

    public Category(int categoryId, String name, int parentId) {
        this.categoryId = categoryId;
        this.name = name;
        this.parentId = parentId;
    }

    public Category(Long id, int categoryId, String name, int parentId) {
        this.id = id;
        this.categoryId = categoryId;
        this.name = name;
        this.parentId = parentId;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public int getCategoryId() {
        return categoryId;
    }

    public void setCategoryId(int categoryId) {
        this.categoryId = categoryId;
    }

    /**
     * Not-null value.
     */
    public String getName() {
        return name;
    }

    /**
     * Not-null value; ensure this value is available before it is saved to the database.
     */
    public void setName(String name) {
        this.name = name;
    }

    public int getParentId() {
        return parentId;
    }

    public void setParentId(int parentId) {
        this.parentId = parentId;
    }

    @Override
    public int getFilterId() {
        return categoryId;
    }

    @Override
    public int getFilterParentId() {
        return parentId;
    }

    @Override
    public String getFilterName() {
        return name;
    }

    @Override
    public Category getAllFirstFilter() {
        return new Category(ALL_FILTER_ID, ALL_FILTER_NAME, INVALID_PARENT_ID);
    }

    @Override
    public Category getAllSubFilter(int parentFilterId) {
        return new Category(ALL_FILTER_ID, ALL_FILTER_NAME, parentFilterId);
    }
}
